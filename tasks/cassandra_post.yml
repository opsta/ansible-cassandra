- name: Create Cassandra data_file_directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: cassandra
    group: cassandra
  with_items:
    - "{{ cassandra_data_file_directories }}"
  tags: cassandra-config

- name: Copy cassandra-rackdc.properties file
  template: 
    src: cassandra-rackdc.properties.j2
    dest: "{{ cassandra_rackdc_config_file_path }}"
  register: cassandra_rackdc_init_config_reg
  tags: cassandra-config
- name: Copy cassandra.yaml file
  template:
    src: cassandra.yaml.j2
    dest: "{{ cassandra_config_file_path }}"
  register: cassandra_init_config_reg
  tags: cassandra-config

- block: # Clean up system configuration
#   - name: Stop cassandra for Reload configuration
#     systemd:
#       name: cassandra
#       state: stopped
  - find:
      path: "{{ item }}/system"
      file_type: directory
    with_items:
      - "{{ cassandra_data_file_directories }}"
    register: system_directories_reg
  - name: Un-join Node before reconfiguration
    shell: nodetool decommission
    when: system_directories_reg.results[0].files != []
  - name: Stop cassandra for Reload configuration
    systemd:
      name: cassandra
      state: stopped
  - name: Cleanup system configuration schemas of Cassandra
    file:
      path: "{{ item.path }}"
      state: absent
    with_items:
      - "{{ system_directories_reg.results[0].files }}"
  - name: Cleanup commitlog configuration of Cassandra
    file:
      path: "{{ cassandra_commitlog_directory }}"
      state: absent
  - name: Cleanup caches configuration of Cassandra
    file:
      path: "{{ cassandra_saved_caches_directory }}"
      state: absent
  when: cassandra_rackdc_init_config_reg is changed or
        cassandra_init_config_reg is changed
  tags: cassandra-config

- name: Start Cassandra service
  systemd:
    name: "{{ cassandra_service_name }}"
    state: restarted
    enabled: yes
  when: cassandra_rackdc_init_config_reg is changed or 
        cassandra_init_config_reg is changed
  tags: cassandra-config

- block: # State of Cluster
  - name: Wait for Cassandra service is started
    wait_for:
      host: "{{ ansible_default_ipv4.address }}"
      port: 7000
      delay: 30
  - name: Prepare nodetool for run status
    pause:
      seconds: 10
  - name: Check node status
    shell: nodetool status
    register: nodestat_reg
  - name: Node status
    debug: 
     msg: "{{ nodestat_reg.stdout.split('\n') }}"
  tags: cassandra-config
